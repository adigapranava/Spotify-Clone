{"version":3,"sources":["Images/logo.png","components/Headder.js","components/MainComponent/ArtistName.js","components/MainComponent/TrackContent.js","components/Main.js","components/SideBar/Artist.js","components/SideBar/Artists.js","components/SideBar/Song.js","components/SideBar/Songs.js","components/SideBar.js","components/MusicPlayer.js","api/Spotify.js","components/App.js","index.js"],"names":["Headder","className","src","logo","alt","ArtistName","props","x","artist","name","id","imgUrl","followers","toString","replace","followingArtist","onClick","toggleFavoriteArtist","TrackContent","track","priviewUrl","releaseDate","year","Date","isSongFav","onDoubleClick","toggleFavSong","setSong","alert","srcset","getFullYear","song","Main","useState","artistQuery","setArtistQuery","loading","setLoading","handelFormSubmition","e","a","preventDefault","searchForArtist","onSubmit","type","placeholder","value","onChange","target","autoFocus","htmlFor","class","style","color","tracks","map","Artist","setArtist","Artists","renderFavArtist","artists","length","Song","playingSong","Songs","renderFavSongs","favSongs","display","justifyContent","alignContent","SideBar","favArtist","MusicPlayer","audio","paused","setPlaying","play","pause","playing","axios","create","App","favArtistsKey","favSongsKey","storedFavArtist","JSON","parse","localStorage","getItem","setfavArtist","storedFavSongs","setTracks","setfavSongs","setAudio","artistObj","following","forEach","songObject","newFavSongs","filter","setItem","stringify","oldArray","found","Spotify","get","catch","response","data","items","total","images","url","songObj","fav","sng","useEffect","tracksList","fullTrack","preview_url","album","release_date","push","Audio","addEventListener","setTimeout","newFavArtist","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,MAA0B,iC,OCG1B,SAASA,IACpB,OACI,qBAAKC,UAAU,qBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKC,IAAKC,EAAMC,IAAI,SACpB,oDCkBDC,MAxBf,SAAoBC,GAKhB,IAJ0BC,EAI1B,EAAsCD,EAAME,OAAjCC,GAAX,EAAOC,GAAP,EAAWD,MAAME,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,UACzB,OACI,sBAAKX,UAAU,kBAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKC,IAAG,UAAKS,GAAUP,IAAG,UAAKK,OAEnC,sBAAKR,UAAU,UAAf,UACI,uCAAQQ,KACR,uCAZcF,EAYUK,EAXzBL,EAAEM,WAAWC,QAAQ,wBAAyB,MAW7C,wBACA,wBACIb,UAAS,UAAKK,EAAMS,gBAAgBT,EAAME,QAAQ,YAAc,UAChEQ,QAAS,kBAAIV,EAAMW,qBAAqBX,EAAME,SAFlD,mBAGQF,EAAMS,gBAAgBT,EAAME,QAAQ,YAAc,mBCE3DU,MAnBf,SAAsBZ,GAClB,MAAoDA,EAAMa,MAAnDT,EAAP,EAAOA,GAAID,EAAX,EAAWA,KAAMW,EAAjB,EAAiBA,WAAYT,EAA7B,EAA6BA,OAAQU,EAArC,EAAqCA,YACjCC,EAAO,IAAIC,KAAKF,GACpB,OACI,sBACIpB,UAAS,gBAAWK,EAAMkB,UAAUlB,EAAMa,OAAQ,QAAQ,IAC1DM,cAAe,WAAKnB,EAAMoB,cAAcpB,EAAMa,QAC9CH,QAAS,WACLI,EAAYd,EAAMqB,QAAQrB,EAAMa,OAAQS,MAAM,gDAJtD,UAKI,qBAAK1B,IAAG,UAAKS,GAAUP,IAAG,UAAKK,GAAQoB,OAAO,KAC9C,sBAAK5B,UAAU,aAAf,UACI,uCAAQQ,KACR,sCAAOa,EAAKQ,cAAZ,sBAEHxB,EAAMyB,MAAQzB,EAAMyB,KAAKrB,KAAOA,EAAI,qBAAKT,UAAU,sBAA2B,OCmD5E+B,MA9Df,SAAc1B,GAEV,MAAsC2B,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAGMC,EAAmB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACxBD,EAAEE,iBACFJ,GAAW,GAFa,SAGlB/B,EAAMoC,gBAAgBR,GAHJ,OAIxBG,GAAW,GAJa,2CAAH,sDA6BzB,OACI,sBAAKpC,UAAU,aAAf,UACI,qBAAKA,UAAU,eAAf,SACI,uBAAM0C,SAAUL,EAAhB,UACI,uBACIM,KAAK,OACLnC,KAAK,GACLC,GAAG,eACHmC,YAAY,mBACZC,MAAOZ,EACPa,SAAU,SAACR,GAAKJ,EAAeI,EAAES,OAAOF,QACxCG,WAAS,IACb,uBAAOC,QAAQ,eAAf,SACI,mBAAGjD,UAAU,wBAIzB,qBAAKA,UAAU,eAAf,SACKmC,EAAU,qBAAKe,MAAM,WAvCvB7C,EAAME,OAAS,cAAC,EAAD,CACEO,gBAAiBT,EAAMS,gBACvBE,qBAAsBX,EAAMW,qBAC5BT,OAAQF,EAAME,SAAW,8BAAK,oBAAI4C,MAAO,CAACC,MAAM,WAAlB,qCAsClD,qBAAKpD,UAAU,eAAf,SACKmC,EAAU,wBAnCF9B,EAAMgD,OAAOC,KAAI,SAACpC,GAC/B,OACQ,cAAC,EAAD,CACIA,MAAOA,EACPQ,QAASrB,EAAMqB,QACfI,KAAMzB,EAAMyB,KACZL,cAAepB,EAAMoB,cACrBF,UAAWlB,EAAMkB,WACZL,EAAMT,aCrBpB8C,MAXf,SAAgBlD,GACZ,MAA2BA,EAAME,OAAtBC,GAAX,EAAOC,GAAP,EAAWD,MAAME,EAAjB,EAAiBA,OACjB,OACI,sBAAKV,UAAU,eACXe,QAAS,kBAAIV,EAAMmD,UAAUnD,EAAME,SADvC,UAEI,qBAAKN,IAAG,UAAKS,GAAUP,IAAG,UAAKK,KAC/B,sCAAOA,SCoBJiD,MAxBf,SAAiBpD,GACb,IAAIqD,EAAkBrD,EAAMsD,QAAQL,KAAI,SAAC/C,GACrC,OACQ,cAAC,EAAD,CAEIA,OAAUA,EACViD,UAAWnD,EAAMmD,WAFZjD,EAAOE,OAM5B,OACI,sBAAKT,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sDAEJ,qBAAKA,UAAU,kBAAf,SACKK,EAAMsD,QAAQC,OAAO,EAClBF,EACA,qBAAIP,MAAO,CAACC,MAAM,WAAlB,mCAAoD,uBAApD,eCALS,MApBf,SAAcxD,GACV,MAAyCA,EAAMyB,KAAxCrB,EAAP,EAAOA,GAAID,EAAX,EAAWA,KAAOE,EAAlB,EAAkBA,OAAQU,EAA1B,EAA0BA,YACtBC,EAAO,IAAIC,KAAKF,GACpB,OACI,sBAAKpB,UAAU,WACXwB,cAAe,WAAKnB,EAAMoB,cAAcpB,EAAMyB,OAC9Cf,QAAS,kBAAIV,EAAMqB,QAAQrB,EAAMyB,OAFrC,UAIG,qBAAK9B,UAAU,eAAf,SACI,qBAAKC,IAAG,UAAKS,GAAUP,IAAI,OAE9B,sBAAKH,UAAU,aAAf,UACI,uCAAQQ,KACR,sCAAOa,EAAKQ,cAAZ,mBACHxB,EAAMyD,aAAezD,EAAMyD,YAAYrD,IAAMA,EAAI,qBAAKT,UAAU,sBAA4B,UCgB1F+D,MA7Bf,SAAe1D,GACX,IAAI2D,EAAiB3D,EAAM4D,SAASX,KAAI,SAACxB,GACrC,OACQ,cAAC,EAAD,CAEIA,KAAQA,EACRgC,YAAazD,EAAMyB,KACnBL,cAAepB,EAAMoB,cACrBC,QAASrB,EAAMqB,SAJVI,EAAKrB,OAO1B,OACI,sBAAKT,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAf,SACI,0DAEJ,qBAAKA,UAAU,gBAAf,SACKK,EAAM4D,SAASL,OAAO,EACnBI,EACA,qBAAIb,MAAO,CACPC,MAAM,UACNc,QAAQ,OACRC,eAAe,SACfC,aAAa,UAJjB,wCAI6C,uBAJ7C,eCHLC,MAff,SAAiBhE,GACb,OACI,sBAAKL,UAAU,aAAf,UACI,cAAC,EAAD,CACI2D,QAAStD,EAAMiE,UACfd,UAAWnD,EAAMmD,YACrB,cAAC,EAAD,CACIS,SAAU5D,EAAM4D,SAChBnC,KAAMzB,EAAMyB,KACZJ,QAASrB,EAAMqB,QACfD,cAAepB,EAAMoB,oBC2BtB8C,MAvCf,SAAqBlE,GAEjB,MAAyCA,EAAMyB,KAApCtB,GAAX,EAAOC,GAAP,EAAWD,MAAOE,EAAlB,EAAkBA,OAAQU,EAA1B,EAA0BA,YACtBC,EAAO,IAAIC,KAAKF,GAapB,OACI,qBAAKpB,UAAU,eAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKC,IAAG,UAAKS,GAAUP,IAAG,UAAKK,GAAQoB,OAAO,OAElD,sBAAK5B,UAAU,aAAf,UACI,uCAAQQ,KACR,sCAAOa,EAAKQ,cAAZ,sBAEJ,sBAAK7B,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAYe,QAAS,WArB7CV,EAAMmE,MAAMC,QACXpE,EAAMqE,YAAW,GACjBrE,EAAMmE,MAAMG,SAGZtE,EAAMqE,YAAW,GACjBrE,EAAMmE,MAAMI,UAeJ,SACI,mBAAG5E,UAAS,aAAQK,EAAMwE,QAAS,WAAY,eAEnD,qBAAK7E,UAAU,YAAYe,QAAS,WAAKV,EAAMoB,cAAcpB,EAAMyB,OAAnE,SACI,mBAAG9B,UAAS,UAAKK,EAAMkB,UAAUlB,EAAMyB,MAAM,MAAM,MAAvC,0B,gBC/BrBgD,E,OAAAA,EAAMC,OAAO,CACxB,QAAU,8CCkMCC,MA7Lf,WACE,IAAMC,EAAgB,aAChBC,EAAc,WAEdC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQN,KAAmB,GAE3E,EAAkCjD,mBAASmD,GAA3C,mBAAOb,EAAP,KAAkBkB,EAAlB,KAGMC,EAAiBL,KAAKC,MAAMC,aAAaC,QAAQL,KAAiB,GACxE,EAA4BlD,qBAA5B,mBAAOzB,EAAP,KAAeiD,EAAf,KACA,EAA4BxB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeqC,EAAf,KAEA,EAAgC1D,mBAASyD,GAAzC,mBAAOxB,EAAP,KAAiB0B,EAAjB,KACA,EAAwB3D,qBAAxB,mBAAOF,EAAP,KAAaJ,EAAb,KACA,EAA0BM,qBAA1B,mBAAOwC,EAAP,KAAcoB,EAAd,KACA,EAA8B5D,oBAAS,GAAvC,mBAAO6C,EAAP,KAAgBH,EAAhB,KAgBM5D,EAAkB,SAAC+E,GACvB,IAAIC,GAAU,EAKd,OAJAxB,EAAUyB,SAAQ,SAAAxF,GACbA,EAAOE,IAAMoF,EAAUpF,KACxBqF,GAAY,MAETA,GAkBDrE,EAAgB,SAACuE,GACrB,GAAGzE,EAAUyE,GAAY,CACvB,IAAMC,EAAchC,EAASiC,QAC7B,SAACpE,GAAD,OAAUA,EAAKrB,KAAOuF,EAAWvF,MACjCkF,EAAYM,GACZX,aAAaa,QAAQjB,EAAaE,KAAKgB,UAAUH,SAE/CN,GAAY,SAAAU,GAER,OADAf,aAAaa,QAAQjB,EAAaE,KAAKgB,UAAL,CAAgBJ,GAAhB,mBAA+BK,MAC3D,CAAEL,GAAR,mBAAuBK,QAM3B5D,EAAe,uCAAG,WAAOR,GAAP,2BAAAM,EAAA,yDAChB+D,GAAQ,EACK,KAAdrE,EAFiB,iEAIGsE,EAAQC,IAAR,kBAAuBvE,IACfwE,OAAM,WACLH,GAAM,KANlB,UAIdI,EAJc,QAUjBJ,EAViB,sBAYlBK,GADIA,EAAOD,EAASC,MACRhD,QAAQiD,MAAM,IAZR,wBAcZpG,EAAOmG,EAAKnG,KACZC,EAAKkG,EAAKlG,GACVE,EAAYgG,EAAKhG,UAAUkG,MAC3BnG,EAASiG,EAAKG,OAAO,GAAIH,EAAKG,OAAO,GAAGC,IAAK,sFAOjDvD,EANgB,CACd/C,KACAD,OACAE,SACAC,cAtBc,mDA4BlBgB,MAAM,0CAA2CM,EAAY,KA5B3C,4CAAH,sDAgCfV,EAAY,SAACyF,GACjB,IAAMvG,EAAKuG,EAAQvG,GACfwG,GAAI,EAKR,OAJAhD,EAAS8B,SAAQ,SAAAmB,GACVA,EAAIzG,KAAOA,IACVwG,GAAM,MAEPA,GA+CX,OA5CAE,oBAAS,sBAAC,gCAAA5E,EAAA,0DACLhC,EADK,uBAENmF,EAAU,IAFJ,SAGiBa,EAAQC,IAAR,kBAAuBjG,EAAOE,GAA9B,gBAHjB,OAGAiG,EAHA,OAIAC,EAAOD,EAASC,KAClBS,EAAY,GAChBT,EAAKtD,OAAO0C,SAAQ,SAAAsB,GAClB,IAAI7G,EAAO6G,EAAU7G,KACjBW,EAAakG,EAAUC,YACvB5G,EAAS2G,EAAUE,MAAMT,OAAOlD,OAAS,EAAGyD,EAAUE,MAAMT,OAAO,GAAGC,IAAK,8JAC3EtG,EAAK4G,EAAU5G,GACfW,EAAciG,EAAUE,MAAMC,aAClCJ,EAAWK,KAAK,CACdhH,KAAGD,OAAMW,aAAYT,SAAQH,SAAQa,mBAIzCsE,EAAU0B,GAjBJ,2CAmBR,CAAC7G,IAEH4G,qBAAU,WACL3C,GACDA,EAAMI,QAEL9C,GACD8D,EAAS,IAAI8B,MAAM5F,EAAKX,eAE1B,CAACW,IAEHqF,qBAAU,WACL3C,IACCA,EAAMG,OACND,GAAW,GAEXF,EAAMmD,iBAAiB,SAAQ,WAC7BC,YAAW,WACTlG,IACAgD,GAAW,KACV,WAGT,CAACF,IAGD,sBAAKxE,UAAU,MAAf,UACE,cAACD,EAAD,IACA,cAAC,EAAD,CACEuE,UAAWA,EACXd,UAAWA,EACX1B,KAAMA,EACNJ,QAASA,EACTD,cAAeA,EACfwC,SAAUA,IAEZ,cAAC,EAAD,CACExB,gBAAiBA,EACjBlC,OAAQA,EACR8C,OAAQA,EACRvB,KAAMA,EACNJ,QAASA,EACTZ,gBAAiBA,EACjBE,qBA7JuB,SAAC6E,GAC5B,GAAG/E,EAAgB+E,GAAW,CAC5B,IAAMgC,EAAevD,EAAU4B,QAC7B,SAAC3F,GAAD,OAAYA,EAAOE,KAAOoF,EAAUpF,MACtC6E,aAAaa,QAAQlB,EAAeG,KAAKgB,UAAUyB,IACnDrC,EAAaqC,QAEbrC,GAAa,SAAAa,GAEX,OADAf,aAAaa,QAAQlB,EAAeG,KAAKgB,UAAL,sBAAmBC,GAAnB,CAA6BR,MAC3D,CAAEA,GAAR,mBAAsBQ,QAqJtB5E,cAAeA,EACfF,UAAWA,IACZO,GAAQ,cAAC,EAAD,CACCA,KAAMA,EACN0C,MAAOA,EACPK,QAASA,EACTH,WAAYA,EACZjD,cAAeA,EACfF,UAAWA,QC5L3BuG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.93b3742b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.166f1e38.png\";","import React from 'react'\r\nimport logo from '../Images/logo.png'\r\n\r\nexport default function Headder() {\r\n    return (\r\n        <div className=\"headder item item1\">\r\n            <div className=\"headder-text\">\r\n                <img src={logo} alt=\"logo\" />\r\n                <h2>Spotify Clone</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction ArtistName(props) {\r\n    function numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    const {id, name, imgUrl, followers} = props.artist;\r\n    return (\r\n        <div className=\"selected-artist\">\r\n            <div className=\"img\">\r\n                <img src={`${imgUrl}`} alt={`${name}`}  />\r\n            </div>\r\n            <div className=\"profile\">\r\n                <h2>{`${name}`}</h2>\r\n                <p>{`${numberWithCommas(followers)} monthly listeners`}</p>\r\n                <button \r\n                    className={`${props.followingArtist(props.artist)?\"following\" : \"follow\"}`}\r\n                    onClick={()=>props.toggleFavoriteArtist(props.artist)}>\r\n                    {`${props.followingArtist(props.artist)?\"following\" : \"follow\"}`}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistName\r\n","import React from 'react'\r\n\r\nfunction TrackContent(props) {\r\n    const {id, name, priviewUrl, imgUrl, releaseDate} = props.track;\r\n    var year = new Date(releaseDate);\r\n    return (\r\n        <div \r\n            className={`track ${props.isSongFav(props.track)? \"liked\":\"\"}`} \r\n            onDoubleClick={()=>{props.toggleFavSong(props.track)}}\r\n            onClick={()=>{\r\n                priviewUrl? props.setSong(props.track): alert(\"Sorry we cant play this try other songs : )\")}}>\r\n            <img src={`${imgUrl}`} alt={`${name}`} srcset=\"\" />\r\n            <div className=\"track-name\">\r\n                <h4>{`${name}`}</h4>\r\n                <p>{`${year.getFullYear()} • Album`}</p>\r\n            </div>\r\n            {props.song && props.song.id === id? <div className=\"currently-playing\"></div>:\"\" }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrackContent\r\n","import ArtistName from './MainComponent/ArtistName';\r\nimport React, { useState, useEffect} from 'react';\r\nimport TrackContent from './MainComponent/TrackContent';\r\n\r\n\r\nfunction Main(props) {\r\n    // from form\r\n    const [artistQuery, setArtistQuery] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    const handelFormSubmition = async (e) =>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        await props.searchForArtist(artistQuery)\r\n        setLoading(false);\r\n    }\r\n\r\n    const showArtist = () =>{\r\n        return props.artist ? <ArtistName \r\n                                followingArtist={props.followingArtist}\r\n                                toggleFavoriteArtist={props.toggleFavoriteArtist}\r\n                                artist={props.artist}/>: <div><h1 style={{color:\"#a3a3a3\"}}>Nothing To Show : (</h1></div>\r\n    }\r\n\r\n    const getTracks = ()=>{\r\n        let tracksList = props.tracks.map((track) =>{\r\n            return (\r\n                    <TrackContent\r\n                        track={track}\r\n                        setSong={props.setSong}\r\n                        song={props.song}\r\n                        toggleFavSong={props.toggleFavSong}\r\n                        isSongFav={props.isSongFav}\r\n                        key={track.id}/>\r\n            )\r\n        })\r\n        return tracksList\r\n    }\r\n    \r\n    return (\r\n        <div className=\"item item3\">\r\n            <div className=\"item3-search\">\r\n                <form onSubmit={handelFormSubmition}>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"\" \r\n                        id=\"searchArtist\" \r\n                        placeholder=\"Search By Artist\" \r\n                        value={artistQuery}\r\n                        onChange={(e)=>{setArtistQuery(e.target.value)}}\r\n                        autoFocus/>\r\n                    <label htmlFor=\"searchArtist\">\r\n                        <i className=\"fa fa-search\"></i>\r\n                    </label>\r\n                </form>\r\n            </div>\r\n            <div className=\"artist-stage\">\r\n                {loading ? <div class=\"loader\"></div>: showArtist()}\r\n            </div>\r\n            <div className=\"tracks-stage\">\r\n                {loading ? <div></div>: getTracks()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\n\r\nfunction Artist(props) {\r\n    const {id, name, imgUrl} = props.artist;\r\n    return (\r\n        <div className=\"item2-artist\" \r\n            onClick={()=>props.setArtist(props.artist)}>\r\n            <img src={`${imgUrl}`} alt={`${name}`} />\r\n            <p>{`${name}`}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Artist\r\n","import React from 'react'\r\nimport Artist from './Artist'\r\n\r\n\r\nfunction Artists(props) {\r\n    let renderFavArtist = props.artists.map((artist) =>{\r\n        return (\r\n                <Artist\r\n                    key={artist.id}\r\n                    artist = {artist}\r\n                    setArtist={props.setArtist}/>\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <div className=\"item2-part\">\r\n            <div className=\"item2-head\">\r\n                <h4>Artists You Follow</h4>\r\n            </div>\r\n            <div className=\"fav-artists-div\">\r\n                {props.artists.length>0? \r\n                    renderFavArtist :\r\n                    <h3 style={{color:\"#a3a3a3\"}}>You Follow No Artist!?<br></br>: (</h3>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Artists\r\n","import React from 'react'\r\n\r\nfunction Song(props) {\r\n    const {id, name , imgUrl, releaseDate} = props.song;\r\n    var year = new Date(releaseDate);\r\n    return (\r\n        <div className=\"fav-song\" \r\n            onDoubleClick={()=>{props.toggleFavSong(props.song)}}\r\n            onClick={()=>props.setSong(props.song)}\r\n            >\r\n           <div className=\"fav-song-img\">\r\n               <img src={`${imgUrl}`} alt=\"\" />\r\n           </div>\r\n            <div className=\"track-name\">\r\n                <h4>{`${name}`}</h4>\r\n                <p>{`${year.getFullYear()} • Album`}</p>\r\n            {props.playingSong && props.playingSong.id == id? <div className=\"currently-playing\"></div>: \"\" }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","import React from 'react'\r\nimport Song from './Song'\r\n\r\nfunction Songs(props) {\r\n    let renderFavSongs = props.favSongs.map((song) =>{\r\n        return (\r\n                <Song\r\n                    key={song.id}\r\n                    song = {song}\r\n                    playingSong={props.song}\r\n                    toggleFavSong={props.toggleFavSong}\r\n                    setSong={props.setSong}/>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"item2-part\">\r\n            <div className=\"item2-head\">\r\n                <h4>Songs You 🤍</h4>\r\n            </div>\r\n            <div className=\"fav-songs-div\">\r\n                {props.favSongs.length>0? \r\n                    renderFavSongs :\r\n                    <h3 style={{\r\n                        color:\"#a3a3a3\", \r\n                        display:\"flex\", \r\n                        justifyContent:\"center\",\r\n                        alignContent:\"center\"}}>You 🖤 No Songs!?<br></br>: (</h3>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Songs\r\n","import React from 'react'\r\nimport Artists from './SideBar/Artists'\r\nimport Songs from './SideBar/Songs'\r\n\r\nfunction SideBar(props) {\r\n    return (\r\n        <div className=\"item2 item\">\r\n            <Artists \r\n                artists={props.favArtist}\r\n                setArtist={props.setArtist}/>\r\n            <Songs \r\n                favSongs={props.favSongs}\r\n                song={props.song}\r\n                setSong={props.setSong}\r\n                toggleFavSong={props.toggleFavSong}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react'\r\n\r\nfunction MusicPlayer(props) {\r\n    // props.audio && console.log(props.audio.duration,\"sad\");\r\n    const {id, name , imgUrl, releaseDate} = props.song\r\n    var year = new Date(releaseDate);\r\n\r\n    const playPauseHandler = ()=>{\r\n        if(props.audio.paused){\r\n            props.setPlaying(true);\r\n            props.audio.play();\r\n        }\r\n        else{\r\n            props.setPlaying(false);\r\n            props.audio.pause();\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <div className=\"music-player\">\r\n            <div className=\"top\">\r\n                <div className=\"img\">\r\n                    <img src={`${imgUrl}`} alt={`${name}`} srcset=\"\" />\r\n                </div>\r\n                <div className=\"track-name\">\r\n                    <h4>{`${name}`}</h4>\r\n                    <p>{`${year.getFullYear()} • Album`}</p>\r\n                </div>\r\n                <div className=\"play-like\">\r\n                    <div className=\"play-icon\" onClick={() =>{playPauseHandler()}}>\r\n                        <i className={`fa ${props.playing? \"fa-pause\": \"fa-play\"}`}></i>\r\n                    </div>\r\n                    <div className=\"like-icon\" onClick={()=>{props.toggleFavSong(props.song)}}>\r\n                        <i className={`${props.isSongFav(props.song)?\"fas\":\"far\"} fa-heart`}></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicPlayer\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    \"baseURL\":\"https://spotify-artist-api.herokuapp.com/\"\r\n})\r\n","import Headder from './Headder';\r\nimport Main from './Main';\r\nimport SideBar from './SideBar';\r\nimport MusicPlayer from './MusicPlayer';\r\nimport React, { useState, useEffect} from 'react';\r\nimport '../App.css';\r\nimport Spotify from \"../api/Spotify\"\r\n\r\nfunction App() {\r\n  const favArtistsKey = \"favArtists\";\r\n  const favSongsKey = \"favSongs\";\r\n\r\n  const storedFavArtist = JSON.parse(localStorage.getItem(favArtistsKey)) || [];\r\n  // from local storage\r\n  const [favArtist, setfavArtist] = useState(storedFavArtist)\r\n\r\n  // from api\r\n  const storedFavSongs = JSON.parse(localStorage.getItem(favSongsKey)) || [];\r\n  const [artist, setArtist] = useState()\r\n  const [tracks, setTracks] = useState([])\r\n\r\n  const [favSongs, setfavSongs] = useState(storedFavSongs)\r\n  const [song, setSong] = useState()\r\n  const [audio, setAudio] = useState()\r\n  const [playing, setPlaying] = useState(false)\r\n\r\n  const toggleFavoriteArtist = (artistObj) => {\r\n    if(followingArtist(artistObj)){\r\n      const newFavArtist = favArtist.filter(\r\n        (artist) => artist.id !== artistObj.id);\r\n      localStorage.setItem(favArtistsKey, JSON.stringify(newFavArtist))\r\n      setfavArtist(newFavArtist)\r\n    }else{\r\n      setfavArtist(oldArray => {\r\n        localStorage.setItem(favArtistsKey, JSON.stringify([...oldArray, artistObj]))\r\n        return [artistObj, ...oldArray]\r\n      });\r\n    }\r\n  }\r\n\r\n  const followingArtist = (artistObj) =>{\r\n    var following=false\r\n    favArtist.forEach(artist =>{\r\n      if(artist.id == artistObj.id)\r\n        following = true;\r\n    })\r\n    return following;\r\n  }\r\n  \r\n  const addFavoriteArtist = (artistObject) => {\r\n    setfavArtist(oldArray => {\r\n      localStorage.setItem(favArtistsKey, JSON.stringify([...oldArray, artistObject]))\r\n      return [artistObject, ...oldArray]\r\n    });\r\n  }\r\n\r\n  const removeFavoriteArtist = (artistObjectId) => {\r\n    const newFavArtist = favArtist.filter(\r\n    (artist) => artist.id !== artistObjectId);\r\n      localStorage.setItem(favArtistsKey, JSON.stringify(newFavArtist))\r\n      setfavArtist(newFavArtist)\r\n  }\r\n  \r\n    // remove from state TODO remove from local storage\r\n    const toggleFavSong = (songObject) => {\r\n      if(isSongFav(songObject)){\r\n        const newFavSongs = favSongs.filter(\r\n        (song) => song.id !== songObject.id);\r\n        setfavSongs(newFavSongs)\r\n        localStorage.setItem(favSongsKey, JSON.stringify(newFavSongs));\r\n      }else{\r\n          setfavSongs(oldArray => {\r\n              localStorage.setItem(favSongsKey, JSON.stringify([songObject, ...oldArray]));\r\n              return [songObject, ...oldArray]\r\n          });\r\n      }\r\n    }\r\n\r\n    // search for artist using the qwery\r\n    const searchForArtist = async (artistQuery) => {\r\n        var found = true;\r\n        if(artistQuery===\"\")\r\n          return\r\n        const response = await Spotify.get(`/artist/${artistQuery}`)\r\n                                      .catch(()=>{\r\n                                        found=false;\r\n                                        // alert(\"Sorry!! No Artist found for the qwery\"+ artistQuery)\r\n                                        return;\r\n                                      })\r\n        if(found){\r\n          var data = response.data;\r\n          data = data.artists.items[0];\r\n          if(data){\r\n            var name = data.name;\r\n            var id = data.id;\r\n            var followers = data.followers.total;\r\n            var imgUrl = data.images[0]? data.images[0].url :\"https://github.com/adigapranava/courseKart/blob/main/static/images/boy.png?raw=true\";\r\n            var artistObj = {\r\n              id,\r\n              name,\r\n              imgUrl,\r\n              followers\r\n            }\r\n            setArtist(artistObj)\r\n            return;\r\n          }\r\n        }else{\r\n          alert(\"Sorry!! No Artist found for the qwery '\"+ artistQuery+\"'\")\r\n        }\r\n    }\r\n\r\n    const isSongFav = (songObj) =>{\r\n      const id = songObj.id\r\n      var fav=false\r\n      favSongs.forEach(sng =>{\r\n          if(sng.id === id)\r\n              fav = true;\r\n      })\r\n      return fav;\r\n    }\r\n\r\n  useEffect(async ()=>{\r\n    if(artist){\r\n      setTracks([])\r\n      const response = await Spotify.get(`/artist/${artist.id}/top-tracks`);\r\n      const data = response.data; \r\n      let tracksList =[]\r\n      data.tracks.forEach(fullTrack=>{\r\n        var name = fullTrack.name;\r\n        var priviewUrl = fullTrack.preview_url;\r\n        var imgUrl = fullTrack.album.images.length > 0? fullTrack.album.images[0].url :\"https://d1csarkz8obe9u.cloudfront.net/posterpreviews/neon-smoke-artistic-video-album-art-design-template-e46f6c8f94615dc12b347ad51ccc1cd0.jpg?ts=1591105904\";\r\n        var id = fullTrack.id\r\n        var releaseDate = fullTrack.album.release_date\r\n        tracksList.push({\r\n          id,name, priviewUrl, imgUrl, artist, releaseDate\r\n        })\r\n\r\n      })\r\n      setTracks(tracksList);      \r\n    }\r\n  },[artist])\r\n\r\n  useEffect(()=>{\r\n    if(audio){\r\n      audio.pause();\r\n    }\r\n    if(song){\r\n      setAudio(new Audio(song.priviewUrl));\r\n    }\r\n  },[song])\r\n\r\n  useEffect(()=>{\r\n    if(audio){\r\n        audio.play();\r\n        setPlaying(true);\r\n        // console.log(\"audio added\");\r\n        audio.addEventListener('ended',function(){\r\n          setTimeout(()=>{\r\n            setSong()\r\n            setPlaying(false);\r\n          }, 2000)\r\n        })\r\n    }\r\n  },[audio])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Headder />\r\n      <SideBar \r\n        favArtist={favArtist}\r\n        setArtist={setArtist}\r\n        song={song}\r\n        setSong={setSong}\r\n        toggleFavSong={toggleFavSong}\r\n        favSongs={favSongs}\r\n        />\r\n      <Main \r\n        searchForArtist={searchForArtist}\r\n        artist={artist}\r\n        tracks={tracks}\r\n        song={song}\r\n        setSong={setSong}\r\n        followingArtist={followingArtist}\r\n        toggleFavoriteArtist={toggleFavoriteArtist}\r\n        toggleFavSong={toggleFavSong}\r\n        isSongFav={isSongFav}/>\r\n      {song && <MusicPlayer \r\n                song={song} \r\n                audio={audio}\r\n                playing={playing}\r\n                setPlaying={setPlaying}\r\n                toggleFavSong={toggleFavSong}\r\n                isSongFav={isSongFav}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}